#summary Documentation for the `flookup` utility

= flookup =

Flookup is a separate command-line utility that allows one to pass words (strings) through transducers and automata from a command-line or through bidirectional pipes with other applications. The standard usage is in scenarios like:

{{{
cat mytext.txt | flookup -x mytransducer.foma
}}}

which would pass each line in `mytext.txt` through the transducer in the upward direction.

By default, `flookup` passes words in the upward direction (hence the name), equivalent to `apply up` or `up` in the `foma` interface. Passing the flag `-i` to `flookup` is equivalent to running `apply down`.

If several FSMs are found in the same file, `flookup` will pass a word through each of them in turn in a pipe-like fashion (see FAQ). In the upward direction (the default) the last transducer is applied up first, and the word passed to the previous transducer, etc. In the downward direction (`-i`), the word is passed through the first transducer, which provides its output to the second, etc.

The `-a` flag (for alternatives) changes this strategy. With this flag set, the transducers are tried in turn.  In the upward direction (the default) the last transducer is tried first, if that fails to provide an output, the penultimate transducer is tried, etc. until one is found that provides an output.  This is intended to be used for applications such as morphologies where the last transducer is perhaps a standard morphology, and the penultimate a guesser morphology, etc. Here, if the last transducer provides a mapping, the penultimate isn't tried, etc.  With the `-i`-flag again, the order of attempts is inverted.

The `-x` flag disables printing of the original input word.

Normally `flookup` prints out the matches separating each input word with a newline, like so:

{{{
input1    output1.1
input1    output1.2

input2    output2.1
...
}}}

The symbol for word separation can be changed with the `-w` flag. The separator between inputs and outputs (default is TAB) is controlled with the `-s` flag.

== cgflookup ==

`Foma` also provides a separate lookup-utility intended to be used for providing alternative morphological readings as input to constraint grammars.  The main differences between `flookup` and `cgflookup` are that:

  * `cgflookup` prints the input word surrounded by `"< ... >"` as per the CG standard.
  * `cgflookup` prints subsequent output alternatives each on a line, indented by a tab.

The utility also has a flag `-u`, which adds the feature `<*>` to those lines whose input words were uppercase-initial. Otherwise, the set of options is identical to that of `flookup`.

